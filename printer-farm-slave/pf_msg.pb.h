// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pf_msg.proto

#ifndef PROTOBUF_INCLUDED_pf_5fmsg_2eproto
#define PROTOBUF_INCLUDED_pf_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_pf_5fmsg_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_pf_5fmsg_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_pf_5fmsg_2eproto();
namespace pf_msg {
class JobMessage;
class JobMessageDefaultTypeInternal;
extern JobMessageDefaultTypeInternal _JobMessage_default_instance_;
class PrinterDataMessage;
class PrinterDataMessageDefaultTypeInternal;
extern PrinterDataMessageDefaultTypeInternal _PrinterDataMessage_default_instance_;
}  // namespace pf_msg
namespace google {
namespace protobuf {
template<> ::pf_msg::JobMessage* Arena::CreateMaybeMessage<::pf_msg::JobMessage>(Arena*);
template<> ::pf_msg::PrinterDataMessage* Arena::CreateMaybeMessage<::pf_msg::PrinterDataMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pf_msg {

enum PrinterDataMessage_Status {
  PrinterDataMessage_Status_NO_ID = 0,
  PrinterDataMessage_Status_WAITING = 1,
  PrinterDataMessage_Status_FINISHED = 2,
  PrinterDataMessage_Status_FAILED = 3
};
bool PrinterDataMessage_Status_IsValid(int value);
const PrinterDataMessage_Status PrinterDataMessage_Status_Status_MIN = PrinterDataMessage_Status_NO_ID;
const PrinterDataMessage_Status PrinterDataMessage_Status_Status_MAX = PrinterDataMessage_Status_FAILED;
const int PrinterDataMessage_Status_Status_ARRAYSIZE = PrinterDataMessage_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* PrinterDataMessage_Status_descriptor();
inline const ::std::string& PrinterDataMessage_Status_Name(PrinterDataMessage_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    PrinterDataMessage_Status_descriptor(), value);
}
inline bool PrinterDataMessage_Status_Parse(
    const ::std::string& name, PrinterDataMessage_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrinterDataMessage_Status>(
    PrinterDataMessage_Status_descriptor(), name, value);
}
// ===================================================================

class JobMessage :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pf_msg.JobMessage) */ {
 public:
  JobMessage();
  virtual ~JobMessage();

  JobMessage(const JobMessage& from);

  inline JobMessage& operator=(const JobMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JobMessage(JobMessage&& from) noexcept
    : JobMessage() {
    *this = ::std::move(from);
  }

  inline JobMessage& operator=(JobMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const JobMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobMessage* internal_default_instance() {
    return reinterpret_cast<const JobMessage*>(
               &_JobMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(JobMessage* other);
  friend void swap(JobMessage& a, JobMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JobMessage* New() const final {
    return CreateMaybeMessage<JobMessage>(nullptr);
  }

  JobMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JobMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JobMessage& from);
  void MergeFrom(const JobMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // required string encodedFile = 3;
  bool has_encodedfile() const;
  void clear_encodedfile();
  static const int kEncodedFileFieldNumber = 3;
  const ::std::string& encodedfile() const;
  void set_encodedfile(const ::std::string& value);
  #if LANG_CXX11
  void set_encodedfile(::std::string&& value);
  #endif
  void set_encodedfile(const char* value);
  void set_encodedfile(const char* value, size_t size);
  ::std::string* mutable_encodedfile();
  ::std::string* release_encodedfile();
  void set_allocated_encodedfile(::std::string* encodedfile);

  // @@protoc_insertion_point(class_scope:pf_msg.JobMessage)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr encodedfile_;
  friend struct ::TableStruct_pf_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class PrinterDataMessage :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pf_msg.PrinterDataMessage) */ {
 public:
  PrinterDataMessage();
  virtual ~PrinterDataMessage();

  PrinterDataMessage(const PrinterDataMessage& from);

  inline PrinterDataMessage& operator=(const PrinterDataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrinterDataMessage(PrinterDataMessage&& from) noexcept
    : PrinterDataMessage() {
    *this = ::std::move(from);
  }

  inline PrinterDataMessage& operator=(PrinterDataMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PrinterDataMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrinterDataMessage* internal_default_instance() {
    return reinterpret_cast<const PrinterDataMessage*>(
               &_PrinterDataMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PrinterDataMessage* other);
  friend void swap(PrinterDataMessage& a, PrinterDataMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrinterDataMessage* New() const final {
    return CreateMaybeMessage<PrinterDataMessage>(nullptr);
  }

  PrinterDataMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PrinterDataMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PrinterDataMessage& from);
  void MergeFrom(const PrinterDataMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrinterDataMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PrinterDataMessage_Status Status;
  static const Status NO_ID =
    PrinterDataMessage_Status_NO_ID;
  static const Status WAITING =
    PrinterDataMessage_Status_WAITING;
  static const Status FINISHED =
    PrinterDataMessage_Status_FINISHED;
  static const Status FAILED =
    PrinterDataMessage_Status_FAILED;
  static inline bool Status_IsValid(int value) {
    return PrinterDataMessage_Status_IsValid(value);
  }
  static const Status Status_MIN =
    PrinterDataMessage_Status_Status_MIN;
  static const Status Status_MAX =
    PrinterDataMessage_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    PrinterDataMessage_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return PrinterDataMessage_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return PrinterDataMessage_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return PrinterDataMessage_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .pf_msg.PrinterDataMessage.Status status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::pf_msg::PrinterDataMessage_Status status() const;
  void set_status(::pf_msg::PrinterDataMessage_Status value);

  // optional uint32 printerId = 2;
  bool has_printerid() const;
  void clear_printerid();
  static const int kPrinterIdFieldNumber = 2;
  ::google::protobuf::uint32 printerid() const;
  void set_printerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pf_msg.PrinterDataMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int status_;
  ::google::protobuf::uint32 printerid_;
  friend struct ::TableStruct_pf_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JobMessage

// required string path = 1;
inline bool JobMessage::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobMessage::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& JobMessage::path() const {
  // @@protoc_insertion_point(field_get:pf_msg.JobMessage.path)
  return path_.GetNoArena();
}
inline void JobMessage::set_path(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pf_msg.JobMessage.path)
}
#if LANG_CXX11
inline void JobMessage::set_path(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pf_msg.JobMessage.path)
}
#endif
inline void JobMessage::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pf_msg.JobMessage.path)
}
inline void JobMessage::set_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pf_msg.JobMessage.path)
}
inline ::std::string* JobMessage::mutable_path() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:pf_msg.JobMessage.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobMessage::release_path() {
  // @@protoc_insertion_point(field_release:pf_msg.JobMessage.path)
  if (!has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return path_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobMessage::set_allocated_path(::std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:pf_msg.JobMessage.path)
}

// required string encodedFile = 3;
inline bool JobMessage::has_encodedfile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobMessage::clear_encodedfile() {
  encodedfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& JobMessage::encodedfile() const {
  // @@protoc_insertion_point(field_get:pf_msg.JobMessage.encodedFile)
  return encodedfile_.GetNoArena();
}
inline void JobMessage::set_encodedfile(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  encodedfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pf_msg.JobMessage.encodedFile)
}
#if LANG_CXX11
inline void JobMessage::set_encodedfile(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  encodedfile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pf_msg.JobMessage.encodedFile)
}
#endif
inline void JobMessage::set_encodedfile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  encodedfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pf_msg.JobMessage.encodedFile)
}
inline void JobMessage::set_encodedfile(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  encodedfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pf_msg.JobMessage.encodedFile)
}
inline ::std::string* JobMessage::mutable_encodedfile() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:pf_msg.JobMessage.encodedFile)
  return encodedfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobMessage::release_encodedfile() {
  // @@protoc_insertion_point(field_release:pf_msg.JobMessage.encodedFile)
  if (!has_encodedfile()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return encodedfile_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobMessage::set_allocated_encodedfile(::std::string* encodedfile) {
  if (encodedfile != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  encodedfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encodedfile);
  // @@protoc_insertion_point(field_set_allocated:pf_msg.JobMessage.encodedFile)
}

// -------------------------------------------------------------------

// PrinterDataMessage

// required .pf_msg.PrinterDataMessage.Status status = 1;
inline bool PrinterDataMessage::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrinterDataMessage::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::pf_msg::PrinterDataMessage_Status PrinterDataMessage::status() const {
  // @@protoc_insertion_point(field_get:pf_msg.PrinterDataMessage.status)
  return static_cast< ::pf_msg::PrinterDataMessage_Status >(status_);
}
inline void PrinterDataMessage::set_status(::pf_msg::PrinterDataMessage_Status value) {
  assert(::pf_msg::PrinterDataMessage_Status_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  status_ = value;
  // @@protoc_insertion_point(field_set:pf_msg.PrinterDataMessage.status)
}

// optional uint32 printerId = 2;
inline bool PrinterDataMessage::has_printerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrinterDataMessage::clear_printerid() {
  printerid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 PrinterDataMessage::printerid() const {
  // @@protoc_insertion_point(field_get:pf_msg.PrinterDataMessage.printerId)
  return printerid_;
}
inline void PrinterDataMessage::set_printerid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  printerid_ = value;
  // @@protoc_insertion_point(field_set:pf_msg.PrinterDataMessage.printerId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pf_msg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pf_msg::PrinterDataMessage_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pf_msg::PrinterDataMessage_Status>() {
  return ::pf_msg::PrinterDataMessage_Status_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_pf_5fmsg_2eproto
